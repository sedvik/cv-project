{"version":3,"sources":["components/ContactInfoDisplay.js","components/ContactInfoEdit.js","components/EditBtn.js","components/SubmitBtn.js","components/ContactInfo.js","components/EducationDisplayEntry.js","components/EducationDisplay.js","components/EducationEditEntry.js","components/AddEntryBtn.js","components/EducationEdit.js","components/Education.js","components/TasksDisplay.js","components/ExperienceDisplayEntry.js","components/ExperienceDisplay.js","components/EditableTask.js","components/TasksEdit.js","components/ExperienceEditEntry.js","components/ExperienceEdit.js","components/Experience.js","App.js","index.js"],"names":["ContactInfoDisplay","this","props","contactInfo","name","email","phone","className","React","Component","ContactInfoEdit","handleNameChange","bind","handleEmailChange","handlePhoneChange","e","newValue","target","value","updateContactInfo","htmlFor","id","type","defaultValue","onChange","EditBtn","setEditable","onClick","SubmitBtn","setToDisplay","ContactInfo","state","editable","setState","property","prevState","Object","assign","EducationDisplayEntry","educationEntry","schoolName","titleOfStudy","startDate","endDate","EducationDisplay","education","map","entry","i","EducationEditEntry","handleEntryUpdate","handleEntryDelete","getAttribute","updateEducationEntry","deleteEducationEntry","AddEntryBtn","addEntry","EducationEdit","addEducationEntry","Education","uniqid","newEducationEntry","filter","TasksDisplay","tasks","task","text","ExperienceDisplayEntry","experienceEntry","companyName","position","ExperienceDisplay","experience","EditableTask","handleTaskEdit","handleTaskDelete","entryId","taskId","updateTaskEntry","deleteTaskEntry","entryNum","TasksEdit","handleButtonClick","taskCallbacks","addTaskEntry","ExperienceEditEntry","updateExperienceEntry","deleteExperienceEntry","ExperienceEdit","addExperienceEntry","Experience","newExperienceEntry","newTask","newTasks","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7949d22c.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/ContactInfoDisplay.css'\n\nclass ContactInfoDisplay extends React.Component {\n  render () {\n    const { name, email, phone } = this.props.contactInfo\n\n    return (\n      <div className=\"contact-info-display\">\n        <p>{name}</p>\n        <p>{email}</p>\n        <p>{phone}</p>\n      </div>\n    )\n  }\n}\n\nexport default ContactInfoDisplay\n","import React from 'react'\nimport '../styles/ContactInfoEdit.css'\n\nclass ContactInfoEdit extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleEmailChange = this.handleEmailChange.bind(this)\n    this.handlePhoneChange = this.handlePhoneChange.bind(this)\n  }\n\n  handleNameChange (e) {\n    const newValue = e.target.value\n    this.props.updateContactInfo('name', newValue)\n  }\n\n  handleEmailChange (e) {\n    const newValue = e.target.value\n    this.props.updateContactInfo('email', newValue)\n  }\n\n  handlePhoneChange (e) {\n    const newValue = e.target.value\n    this.props.updateContactInfo('phone', newValue)\n  }\n\n  render () {\n    const { name, email, phone } = this.props.contactInfo\n\n    return (\n      <div className='contact-info-edit'>\n        <label htmlFor=\"contact-name\">Name</label>\n        <input\n          id=\"contact-name\"\n          type=\"text\"\n          defaultValue={name}\n          onChange={this.handleNameChange}\n        />\n        <label htmlFor=\"contact-email\">Email</label>\n        <input\n          id=\"contact-email\"\n          type=\"email\"\n          defaultValue={email}\n          onChange={this.handleEmailChange}\n        />\n        <label htmlFor=\"contact-phone\">Phone Number</label>\n        <input\n          id=\"contact-phone\"\n          type=\"tel\"\n          defaultValue={phone}\n          onChange={this.handlePhoneChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ContactInfoEdit\n","import React from 'react'\n\nclass EditBtn extends React.Component {\n  render () {\n    const { setEditable } = this.props\n\n    return <button onClick={setEditable}>Edit</button>\n  }\n}\n\nexport default EditBtn\n","import React from 'react'\n\nclass SubmitBtn extends React.Component {\n  render () {\n    const { setToDisplay } = this.props\n\n    return <button onClick={setToDisplay}>Submit</button>\n  }\n}\n\nexport default SubmitBtn\n","import React from 'react'\nimport ContactInfoDisplay from './ContactInfoDisplay'\nimport ContactInfoEdit from './ContactInfoEdit'\nimport EditBtn from './EditBtn'\nimport SubmitBtn from './SubmitBtn'\nimport '../styles/ContactInfo.css'\n\nclass ContactInfo extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      editable: true,\n      contactInfo: {\n        name: '',\n        email: '',\n        phone: ''\n      }\n    }\n    this.setEditable = this.setEditable.bind(this)\n    this.setToDisplay = this.setToDisplay.bind(this)\n    this.updateContactInfo = this.updateContactInfo.bind(this)\n  }\n\n  setEditable () {\n    this.setState({\n      editable: true\n    })\n  }\n\n  setToDisplay () {\n    this.setState({\n      editable: false\n    })\n  }\n\n  updateContactInfo (property, value) {\n    this.setState((prevState, props) => {\n      const updatedContactInfo = Object.assign({}, prevState.contactInfo, { [property]: value })\n      return {\n        contactInfo: updatedContactInfo\n      }\n    })\n  }\n\n  render () {\n    const { editable, contactInfo } = this.state\n\n    return (\n      <div className=\"contact-info-container\">\n        <h1>Contact Information</h1>\n        {editable\n          ? <ContactInfoEdit contactInfo={contactInfo} updateContactInfo={this.updateContactInfo} />\n          : <ContactInfoDisplay contactInfo={contactInfo} />\n        }\n        {editable\n          ? <SubmitBtn setToDisplay={this.setToDisplay} />\n          : <EditBtn setEditable={this.setEditable} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default ContactInfo\n","import React from 'react'\n\nclass EducationDisplayEntry extends React.Component {\n  render () {\n    const {\n      schoolName,\n      titleOfStudy,\n      startDate,\n      endDate\n    } = this.props.educationEntry\n\n    return (\n      <tr>\n        <td>{schoolName}</td>\n        <td>{titleOfStudy}</td>\n        <td>{startDate}</td>\n        <td>{endDate}</td>\n      </tr>\n    )\n  }\n}\n\nexport default EducationDisplayEntry\n","import React from 'react'\nimport EducationDisplayEntry from './EducationDisplayEntry'\nimport '../styles/EducationDisplay.css'\n\nclass EducationDisplay extends React.Component {\n  render () {\n    const { education } = this.props\n\n    return (\n      <table className=\"education-display\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th>Title of Study</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            education.map((entry, i) => {\n              return <EducationDisplayEntry key={entry.id} educationEntry={entry} />\n            })\n          }\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default EducationDisplay\n","import React from 'react'\nimport '../styles/EducationEditEntry.css'\n\nclass EducationEditEntry extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleEntryUpdate = this.handleEntryUpdate.bind(this)\n    this.handleEntryDelete = this.handleEntryDelete.bind(this)\n  }\n\n  handleEntryUpdate (e) {\n    const id = e.target.getAttribute('data-id')\n    const property = e.target.getAttribute('data-property')\n    const value = e.target.value\n    this.props.updateEducationEntry(id, property, value)\n  }\n\n  handleEntryDelete (e) {\n    const id = e.target.getAttribute('data-id')\n    this.props.deleteEducationEntry(id)\n  }\n\n  render () {\n    const {\n      id,\n      schoolName,\n      titleOfStudy,\n      startDate,\n      endDate\n    } = this.props.educationEntry\n\n    return (\n      <div className=\"education-card\">\n          <button data-id={id} onClick={this.handleEntryDelete}>X</button>\n          <label htmlFor={`school-${id}`}>School</label>\n          <input\n            id={`school-${id}`}\n            type=\"text\"\n            defaultValue={schoolName}\n            data-id={id}\n            data-property=\"schoolName\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`title-${id}`}>Title of Study</label>\n          <input\n            id={`title-${id}`}\n            type=\"text\"\n            defaultValue={titleOfStudy}\n            data-id={id}\n            data-property=\"titleOfStudy\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`edu-start-date-${id}`}>Start Date</label>\n          <input\n            id={`edu-start-date-${id}`}\n            type=\"date\"\n            defaultValue={startDate}\n            data-id={id}\n            data-property=\"startDate\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`edu-end-date-${id}`}>End Date</label>\n          <input\n            id={`edu-end-date-${id}`}\n            type=\"date\"\n            defaultValue={endDate}\n            data-id={id}\n            data-property=\"endDate\"\n            onChange={this.handleEntryUpdate}\n          />\n      </div>\n    )\n  }\n}\n\nexport default EducationEditEntry\n","import React from 'react'\nimport '../styles/AddEntryBtn.css'\n\nclass AddEntryBtn extends React.Component {\n  render () {\n    return (\n      <button\n        className=\"add-entry\"\n        onClick={this.props.addEntry}\n      >\n        +\n      </button>)\n  }\n}\n\nexport default AddEntryBtn\n","import React from 'react'\nimport EducationEditEntry from './EducationEditEntry'\nimport AddEntryBtn from './AddEntryBtn'\nimport '../styles/EducationEdit.css'\n\nclass EducationEdit extends React.Component {\n  render () {\n    const {\n      education,\n      addEducationEntry,\n      deleteEducationEntry,\n      updateEducationEntry\n    } = this.props\n\n    return (\n      <div className=\"education-edit-container\">\n        {\n          education.map((entry) => {\n            return (\n              <EducationEditEntry\n                key={entry.id}\n                educationEntry={entry}\n                deleteEducationEntry={deleteEducationEntry}\n                updateEducationEntry={updateEducationEntry}\n              />\n            )\n          })\n        }\n        <AddEntryBtn addEntry={addEducationEntry} />\n      </div>\n    )\n  }\n}\n\nexport default EducationEdit\n","import React from 'react'\nimport EducationDisplay from './EducationDisplay'\nimport EducationEdit from './EducationEdit'\nimport EditBtn from './EditBtn'\nimport SubmitBtn from './SubmitBtn'\nimport uniqid from 'uniqid'\nimport '../styles/Education.css'\n\nclass Education extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      editable: true,\n      education: [\n        {\n          id: uniqid(),\n          schoolName: '',\n          titleOfStudy: '',\n          startDate: '',\n          endDate: ''\n        }\n      ]\n    }\n    this.setEditable = this.setEditable.bind(this)\n    this.setToDisplay = this.setToDisplay.bind(this)\n    this.addEducationEntry = this.addEducationEntry.bind(this)\n    this.deleteEducationEntry = this.deleteEducationEntry.bind(this)\n    this.updateEducationEntry = this.updateEducationEntry.bind(this)\n  }\n\n  setEditable () {\n    this.setState({\n      editable: true\n    })\n  }\n\n  setToDisplay () {\n    this.setState({\n      editable: false\n    })\n  }\n\n  addEducationEntry () {\n    const newEducationEntry = {\n      id: uniqid(),\n      schoolName: '',\n      titleOfStudy: '',\n      startDate: '',\n      endDate: ''\n    }\n\n    this.setState((prevState, props) => {\n      const newEducation = [...prevState.education, newEducationEntry]\n      return {\n        education: newEducation\n      }\n    })\n  }\n\n  deleteEducationEntry (id) {\n    this.setState((prevState, props) => {\n      const newEducation = prevState.education.filter(entry => {\n        return entry.id !== id\n      })\n      return {\n        education: newEducation\n      }\n    })\n  }\n\n  updateEducationEntry (id, property, value) {\n    this.setState((prevState, props) => {\n      const updatedEducation = prevState.education.map(entry => {\n        return (\n          entry.id === id\n            ? Object.assign({}, entry, { [property]: value })\n            : entry\n        )\n      })\n      return {\n        education: updatedEducation\n      }\n    })\n  }\n\n  render () {\n    const { editable, education } = this.state\n    return (\n      <div className=\"education-container\">\n        <h1>Education</h1>\n        {editable\n          ? <EducationEdit\n              education={education}\n              addEducationEntry={this.addEducationEntry}\n              deleteEducationEntry={this.deleteEducationEntry}\n              updateEducationEntry={this.updateEducationEntry}\n            />\n          : <EducationDisplay education={education} />\n        }\n        {editable\n          ? <SubmitBtn setToDisplay={this.setToDisplay} />\n          : <EditBtn setEditable={this.setEditable} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Education\n","import React from 'react'\nimport '../styles/TasksDisplay.css'\n\nclass TasksDisplay extends React.Component {\n  render () {\n    const { tasks } = this.props\n\n    return (\n      <div className=\"tasks-display\">\n        <ul>\n          {tasks.map((task, i) => {\n            return <li key={i}>{task.text}</li>\n          })}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default TasksDisplay\n","import React from 'react'\nimport TasksDisplay from './TasksDisplay'\nimport '../styles/ExperienceDisplayEntry.css'\n\nclass ExperienceDisplayEntry extends React.Component {\n  render () {\n    const {\n      companyName,\n      position,\n      tasks,\n      startDate,\n      endDate\n    } = this.props.experienceEntry\n\n    return (\n      <div className=\"experience-display-entry-container\">\n        <div className=\"company-date-container\">\n          <p className=\"bold\">{companyName}</p>\n          <p>\n            <i>{`${startDate}`}</i> <span className=\"large\">-</span> <i>{`${endDate}`}</i>\n          </p>\n        </div>\n        <h2>{position}</h2>\n        <TasksDisplay tasks={tasks} />\n      </div>\n    )\n  }\n}\n\nexport default ExperienceDisplayEntry\n","import React from 'react'\nimport ExperienceDisplayEntry from './ExperienceDisplayEntry'\nimport '../styles/ExperienceDisplay.css'\n\nclass ExperienceDisplay extends React.Component {\n  render () {\n    const { experience } = this.props\n\n    return (\n      <div className=\"experience-display-container\">\n        {\n          experience.map((entry, i) => {\n            return <ExperienceDisplayEntry key={i} experienceEntry={entry} />\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default ExperienceDisplay\n","import React from 'react'\nimport '../styles/EditableTask.css'\n\nclass EditableTask extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleTaskEdit = this.handleTaskEdit.bind(this)\n    this.handleTaskDelete = this.handleTaskDelete.bind(this)\n  }\n\n  handleTaskEdit (e) {\n    const entryId = e.target.getAttribute('data-entryid')\n    const taskId = e.target.getAttribute('data-taskid')\n    const value = e.target.value\n    this.props.updateTaskEntry(entryId, taskId, value)\n  }\n\n  handleTaskDelete (e) {\n    const entryId = e.target.getAttribute('data-entryid')\n    const taskId = e.target.getAttribute('data-taskid')\n    this.props.deleteTaskEntry(entryId, taskId)\n  }\n\n  render () {\n    const {\n      task,\n      entryId,\n      taskId,\n      entryNum\n    } = this.props\n\n    return (\n      <div className=\"editable-task\">\n        <p className=\"task-number\">{entryNum})</p>\n        <input\n          type=\"text\"\n          defaultValue={task.text}\n          data-entryid={entryId}\n          data-taskid={taskId}\n          onChange={this.handleTaskEdit}\n        />\n        <button\n          className=\"del-btn\"\n          data-entryid={entryId}\n          data-taskid={taskId}\n          onClick={this.handleTaskDelete}\n        >\n          X\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default EditableTask\n","import React from 'react'\nimport EditableTask from './EditableTask'\nimport '../styles/TasksEdit.css'\n\nclass TasksEdit extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleButtonClick = this.handleButtonClick.bind(this)\n  }\n\n  handleButtonClick (e) {\n    const id = e.target.getAttribute('data-entryid')\n    this.props.taskCallbacks.addTaskEntry(id)\n  }\n\n  render () {\n    const {\n      entryId,\n      tasks,\n      taskCallbacks\n    } = this.props\n\n    const {\n      deleteTaskEntry,\n      updateTaskEntry\n    } = taskCallbacks\n\n    return (\n      <div className=\"tasks-edit-container\">\n        <h2>Tasks</h2>\n        <div className=\"editable-tasks-container\">\n          {\n            tasks.map((task, i) => {\n              return (\n                <EditableTask\n                  key={task.id}\n                  task={task}\n                  entryId={entryId}\n                  taskId={task.id}\n                  entryNum={i + 1}\n                  deleteTaskEntry={deleteTaskEntry}\n                  updateTaskEntry={updateTaskEntry}\n                />\n              )\n            })\n          }\n        </div>\n        <button\n          className=\"add-task\"\n          data-entryid={entryId}\n          onClick={this.handleButtonClick}\n        >\n          Add Task\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default TasksEdit\n","import React from 'react'\nimport TasksEdit from './TasksEdit'\nimport '../styles/ExperienceEditEntry.css'\n\nclass ExperienceEditEntry extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleEntryUpdate = this.handleEntryUpdate.bind(this)\n    this.handleEntryDelete = this.handleEntryDelete.bind(this)\n  }\n\n  handleEntryUpdate (e) {\n    const id = e.target.getAttribute('data-id')\n    const property = e.target.getAttribute('data-property')\n    const value = e.target.value\n    this.props.updateExperienceEntry(id, property, value)\n  }\n\n  handleEntryDelete (e) {\n    const id = e.target.getAttribute('data-id')\n    this.props.deleteExperienceEntry(id)\n  }\n\n  render () {\n    const {\n      id,\n      companyName,\n      position,\n      tasks,\n      startDate,\n      endDate\n    } = this.props.experienceEntry\n\n    const { taskCallbacks } = this.props\n\n    return (\n      <div className=\"experience-edit-entry\">\n        <button\n          className=\"delete-btn\"\n          onClick={this.handleEntryDelete}\n          data-id={id}\n        >\n          X\n        </button>\n        <div className=\"experience-entry-info\">\n          <label htmlFor={`company-${id}`}>Company Name</label>\n          <input\n            id={`company-${id}`}\n            type=\"text\"\n            defaultValue={companyName}\n            data-id={id}\n            data-property=\"companyName\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`position-${id}`}>Position</label>\n          <input\n            id={`position-${id}`}\n            type=\"text\"\n            defaultValue={position}\n            data-id={id}\n            data-property=\"position\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`exp-start-date-${id}`}>Start Date</label>\n          <input\n            id={`exp-start-date-${id}`}\n            type=\"date\"\n            defaultValue={startDate}\n            data-id={id}\n            data-property=\"startDate\"\n            onChange={this.handleEntryUpdate}\n          />\n          <label htmlFor={`exp-end-date-${id}`}>End Date</label>\n          <input\n            id={`exp-end-date-${id}`}\n            type=\"date\"\n            defaultValue={endDate}\n            data-id={id}\n            data-property=\"endDate\"\n            onChange={this.handleEntryUpdate}\n          />\n        </div>\n        <TasksEdit\n          entryId={id}\n          tasks={tasks}\n          taskCallbacks={taskCallbacks}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ExperienceEditEntry\n","import React from 'react'\nimport ExperienceEditEntry from './ExperienceEditEntry'\nimport AddEntryBtn from './AddEntryBtn'\nimport '../styles/ExperienceEdit.css'\n\nclass ExperienceEdit extends React.Component {\n  render () {\n    const {\n      experience,\n      addExperienceEntry,\n      deleteExperienceEntry,\n      updateExperienceEntry,\n      taskCallbacks\n    } = this.props\n\n    return (\n      <div className=\"experience-edit-container\">\n        {\n          experience.map((entry) => {\n            return (\n              <ExperienceEditEntry\n                key={entry.id}\n                experienceEntry={entry}\n                deleteExperienceEntry={deleteExperienceEntry}\n                updateExperienceEntry={updateExperienceEntry}\n                taskCallbacks={taskCallbacks}\n              />\n            )\n          })\n        }\n        <AddEntryBtn addEntry={addExperienceEntry} />\n      </div>\n    )\n  }\n}\n\nexport default ExperienceEdit\n","import React from 'react'\nimport ExperienceDisplay from './ExperienceDisplay'\nimport ExperienceEdit from './ExperienceEdit'\nimport EditBtn from './EditBtn'\nimport SubmitBtn from './SubmitBtn'\nimport uniqid from 'uniqid'\nimport '../styles/Experience.css'\n\nclass Experience extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      editable: true,\n      experience: [\n        {\n          id: uniqid(),\n          companyName: '',\n          position: '',\n          tasks: [\n            {\n              id: uniqid(),\n              text: ''\n            }\n          ],\n          startDate: '',\n          endDate: ''\n        }\n      ]\n    }\n    this.setEditable = this.setEditable.bind(this)\n    this.setToDisplay = this.setToDisplay.bind(this)\n    this.addExperienceEntry = this.addExperienceEntry.bind(this)\n    this.deleteExperienceEntry = this.deleteExperienceEntry.bind(this)\n    this.updateExperienceEntry = this.updateExperienceEntry.bind(this)\n    this.addTaskEntry = this.addTaskEntry.bind(this)\n    this.deleteTaskEntry = this.deleteTaskEntry.bind(this)\n    this.updateTaskEntry = this.updateTaskEntry.bind(this)\n  }\n\n  setEditable () {\n    this.setState({\n      editable: true\n    })\n  }\n\n  setToDisplay () {\n    this.setState({\n      editable: false\n    })\n  }\n\n  addExperienceEntry () {\n    const newExperienceEntry = {\n      id: uniqid(),\n      companyName: '',\n      position: '',\n      tasks: [\n        {\n          id: uniqid(),\n          text: ''\n        }\n      ],\n      startDate: '',\n      endDate: ''\n    }\n\n    this.setState((prevState, props) => {\n      const newExperience = [...prevState.experience, newExperienceEntry]\n      return {\n        experience: newExperience\n      }\n    })\n  }\n\n  deleteExperienceEntry (id) {\n    this.setState((prevState, props) => {\n      const updatedExperience = prevState.experience.filter(entry => {\n        return entry.id !== id\n      })\n      return {\n        experience: updatedExperience\n      }\n    })\n  }\n\n  updateExperienceEntry (id, property, value) {\n    this.setState((prevState, props) => {\n      const updatedExperience = prevState.experience.map(entry => {\n        return (\n          entry.id === id\n            ? Object.assign({}, entry, { [property]: value })\n            : entry\n        )\n      })\n\n      return {\n        experience: updatedExperience\n      }\n    })\n  }\n\n  addTaskEntry (entryId) {\n    const newTask = {\n      id: uniqid(),\n      text: ''\n    }\n\n    this.setState((prevState, props) => {\n      const newExperience = prevState.experience.map(entry => {\n        const newTasks = [...entry.tasks, newTask]\n        return (\n          entry.id === entryId\n            ? Object.assign({}, entry, { tasks: newTasks })\n            : entry\n        )\n      })\n\n      return {\n        experience: newExperience\n      }\n    })\n  }\n\n  deleteTaskEntry (entryId, taskId) {\n    this.setState((prevState, props) => {\n      const newExperience = prevState.experience.map(entry => {\n        if (entry.id === entryId) {\n          const newTasks = entry.tasks.filter(task => {\n            return task.id !== taskId\n          })\n          return Object.assign({}, entry, { tasks: newTasks })\n        } else {\n          return entry\n        }\n      })\n      return {\n        experience: newExperience\n      }\n    })\n  }\n\n  updateTaskEntry (entryId, taskId, value) {\n    this.setState((prevState, props) => {\n      const newExperience = prevState.experience.map(entry => {\n        if (entry.id === entryId) {\n          const newTasks = entry.tasks.map(task => {\n            return (\n              task.id === taskId\n                ? Object.assign({}, task, { text: value })\n                : task\n            )\n          })\n          return Object.assign({}, entry, { tasks: newTasks })\n        } else {\n          return entry\n        }\n      })\n      return {\n        experience: newExperience\n      }\n    })\n  }\n\n  render () {\n    const { editable, experience } = this.state\n\n    return (\n      <div className=\"experience-container\">\n        <h1>Experience</h1>\n        {editable\n          ? <ExperienceEdit\n              experience={experience}\n              addExperienceEntry={this.addExperienceEntry}\n              deleteExperienceEntry={this.deleteExperienceEntry}\n              updateExperienceEntry={this.updateExperienceEntry}\n              taskCallbacks={\n                {\n                  addTaskEntry: this.addTaskEntry,\n                  deleteTaskEntry: this.deleteTaskEntry,\n                  updateTaskEntry: this.updateTaskEntry\n                }\n              }\n            />\n          : <ExperienceDisplay experience={experience} />\n        }\n        {editable\n          ? <SubmitBtn setToDisplay={this.setToDisplay} />\n          : <EditBtn setEditable={this.setEditable} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Experience\n","import React from 'react'\nimport ContactInfo from './components/ContactInfo'\nimport Education from './components/Education'\nimport Experience from './components/Experience'\nimport './styles/App.css'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <div className=\"resume-container\">\n        <ContactInfo />\n        <hr />\n        <Education />\n        <hr />\n        <Experience />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport './styles/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}